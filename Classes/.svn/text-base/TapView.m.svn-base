//
//  TapView.m
//  PlannerApp
//
//  Created by openxcell tech.. on 2/10/12.
//  Copyright 2012 __MyCompanyName__. All rights reserved.
//

#import "TapView.h"
#import "StatusPopView.h"
#import "PriorityPopView.h"




@implementation TapView


#pragma mark -
#pragma mark View lifecycle


- (void)viewDidLoad {
    [super viewDidLoad];
	self.title=@"Details";
	self.contentSizeForViewInPopover = CGSizeMake(320.0, 460.0);
	array =[[NSMutableArray alloc] initWithObjects:@"Status",@"Priority",@"Alerts",@"Repeats",@"Locations",@"Delegate To",@"Invitees",@"Availability",@"Folder",@"Sub Folder",@"Add Note",nil];
    deleteBtn= [UIButton buttonWithType:UIButtonTypeRoundedRect];
    
    [deleteBtn setTitle:@"Delete" forState:UIControlStateNormal];
    deleteBtn.frame = CGRectMake(0,0,40,40);
    
    tbl.tableFooterView=deleteBtn;
   
    // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
    // self.navigationItem.rightBarButtonItem = self.editButtonItem;
}


/*
- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
}
*/
/*
- (void)viewDidAppear:(BOOL)animated {
    [super viewDidAppear:animated];
}
*/
/*
- (void)viewWillDisappear:(BOOL)animated {
    [super viewWillDisappear:animated];
}
*/
/*
- (void)viewDidDisappear:(BOOL)animated {
    [super viewDidDisappear:animated];
}
*/
/*
// Override to allow orientations other than the default portrait orientation.
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
    // Return YES for supported orientations.
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}
*/


#pragma mark -
#pragma mark Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    // Return the number of sections.
    return 1;
}


- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    // Return the number of rows in the section.
    return [array count];
}


// Customize the appearance of table view cells.
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    static NSString *CellIdentifier = @"Cell";
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier] autorelease];
    }
	
    // Configure the cell...
	cell.accessoryType=UITableViewCellAccessoryDisclosureIndicator;
	cell.textLabel.text=[array objectAtIndex:indexPath.row];
	return cell;
}


/*
// Override to support conditional editing of the table view.
- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath {
    // Return NO if you do not want the specified item to be editable.
    return YES;
}
*/


/*
// Override to support editing the table view.
- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath {
    
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        // Delete the row from the data source.
        [tableView deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath] withRowAnimation:UITableViewRowAnimationFade];
    }   
    else if (editingStyle == UITableViewCellEditingStyleInsert) {
        // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view.
    }   
}
*/


-(IBAction)clickOnDone:(id)sender
{
	[plan popoverControllerShouldDismissPopover:plan.popover_tap];
}

-(IBAction)clickOnCancel:(id)sender
{
	
}

/*
// Override to support rearranging the table view.
- (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)fromIndexPath toIndexPath:(NSIndexPath *)toIndexPath {
}
*/


/*
// Override to support conditional rearranging of the table view.
- (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath {
    // Return NO if you do not want the item to be re-orderable.
    return YES;
}
*/


#pragma mark -
#pragma mark Table view delegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath 
{
	if (indexPath.row == 0)
	{
		StatusPopView *stat= [[StatusPopView alloc] initWithNibName:@"StatusPopView" bundle:nil];
		[self.navigationController pushViewController:stat animated:YES];
	}
	
	else if(indexPath.row == 1)
	{
		PriorityPopView *priority=[[PriorityPopView alloc] initWithNibName:@"PriorityPopView" bundle:nil];
		[self.navigationController pushViewController:priority animated:YES];

	}
	else if(indexPath.row == 2)
	{
		AlertsPopView *alert=[[AlertsPopView alloc] initWithNibName:@"AlertsPopView" bundle:nil];
		[self.navigationController pushViewController:alert animated:YES];
	}

	else if(indexPath.row == 3)
	{
		RepeatsPopView *repeat=[[RepeatsPopView alloc] initWithNibName:@"RepeatsPopView" bundle:nil];
		[self.navigationController pushViewController:repeat animated:YES];
				
	}
	else if(indexPath.row == 4) 
	{
		//LocationsAlerts *location=[[LocationsAlerts alloc] initWithNibName:@"LocationsAlerts" bundle:nil];
		LocationPopView *location=[[LocationPopView alloc] initWithNibName:@"LocationPopView" bundle:nil];
		[self.navigationController pushViewController:location animated:YES];
	}

	else if (indexPath.row == 5) 
	{
		DelegatePopView *del=[[DelegatePopView alloc] initWithNibName:@"DelegatePopView" bundle:nil];
		[self.navigationController pushViewController:del animated:YES];
	}
	else if(indexPath.row == 6)
	{
		InviteesPopView *invite=[[InviteesPopView alloc]initWithNibName:@"InviteesPopView" bundle:nil];
		[self.navigationController pushViewController:invite animated:YES];
	}
	else if(indexPath.row == 7)
	{
		AvailabilityPopView *available=[[AvailabilityPopView alloc] initWithNibName:@"AvailabilityPopView" bundle:nil];
		[self.navigationController pushViewController:available animated:YES];
	}

	else if(indexPath.row == 8)
	{
		FolderPopView *folder=[[FolderPopView alloc] initWithNibName:@"FolderPopView" bundle:nil];
		[self.navigationController pushViewController:folder animated:YES];
	}
	else if(indexPath.row == 9)
	{
		SubFolderPopView *subFolder=[[SubFolderPopView alloc] initWithNibName:@"SubFolderPopView" bundle:nil];
		[self.navigationController pushViewController:subFolder animated:YES];
	}
	else if(indexPath.row == 10)
	{
		NotePopView *note = [[NotePopView alloc] initWithNibName:@"NotePopView" bundle:nil];
		[self.navigationController pushViewController:note animated:YES];
	}
}


#pragma mark -
#pragma mark Memory management

- (void)didReceiveMemoryWarning {
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Relinquish ownership any cached data, images, etc. that aren't in use.
}

- (void)viewDidUnload {
    // Relinquish ownership of anything that can be recreated in viewDidLoad or on demand.
    // For example: self.myOutlet = nil;
}


- (void)dealloc {
    [super dealloc];
}


@end

